# 服务器配置
server:
  port: 8084  # 修改端口，避免与auth-service冲突

spring:
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848 # Nacos server address for service discovery
  
  # 动态数据源配置
  datasource:
    dynamic:
      primary: master # 设置默认的数据源或者数据源组
      strict: false # 严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源
      datasource:
        master:
          url: jdbc:postgresql://localhost:5432/chatbotspringcloud?currentSchema=chatbotmb
          username: postgres
          password: 123456
          driver-class-name: org.postgresql.Driver
  
  # 数据库版本控制配置
  flyway:
    enabled: false  # 是否启用Flyway
    baseline-on-migrate: true  # 是否在迁移时创建基线
    locations: classpath:db/migration  # 迁移脚本位置
    schemas: chatbotmb  # 数据库schema
    table: flyway_schema_history  # 版本控制表名
  
  # Redis配置
  data:
    redis:
      host: localhost  # Redis服务器地址
      port: 6379       # Redis服务器端口
      # Lettuce连接池配置
      lettuce:
        pool:
          max-active: 8    # 最大活动连接数
          max-idle: 8      # 最大空闲连接数
          min-idle: 0      # 最小空闲连接数
          max-wait: -1ms   # 获取连接最大等待时间，-1表示无限等待
      timeout: 5000ms      # 连接超时时间
      database: 0          # 使用的数据库索引
      client-type: lettuce # 客户端类型
      # Redis服务器参数配置（需要修改redis.conf）
      properties:
        maxmemory: 1000mb  # 最大内存限制
        maxmemory-policy: volatile-lru  # 内存淘汰策略：对设置了过期时间的key采用LRU算法

  # AI模型配置
  ai:
    ollama:
      base-url: http://localhost:11434   # Ollama服务地址
      chat:
        model: qwen3:4b     # 默认使用的模型
        options:
          temperature: 0.7  # 温度参数，控制输出的随机性
          top-p: 0.95       # 核采样参数
          top-k: 5          # 保留概率最高的前k个token

  # RabbitMQ配置
  rabbitmq:
    host: localhost  # RabbitMQ服务器地址
    port: 5672       # RabbitMQ服务器端口
    username: guest  # 用户名
    password: guest  # 密码
    # 消费者配置
    listener:
      simple:
        retry:
          enabled: true            # 启用重试机制
          initial-interval: 1000   # 初始重试间隔(毫秒)
          max-attempts: 3          # 最大重试次数
          max-interval: 10000      # 最大重试间隔(毫秒)
          multiplier: 2.0          # 重试间隔倍增因子
        default-requeue-rejected: false # 拒绝消息时不重新入队
        concurrency: 5        # 并发消费者数量
        max-concurrency: 10   # 最大并发消费者数量
        prefetch: 50          # 每个消费者预取的消息数量
    # 生产者配置
    template:
      retry:
        enabled: true
        initial-interval: 1000
        max-attempts: 3
        max-interval: 10000
        multiplier: 2.0
    # 队列配置
    queue:
      max-length: 100  # 正常队列最大长度
      batch-size: 10   # 批量处理大小

# JWT配置
jwt:
  secret: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970   # JWT密钥
  expiration: 86400000   # Token过期时间（24小时）
  #expiration: 60000     # Token过期时间（1分钟，已注释）

# MyBatis-Plus配置
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml           # Mapper XML文件位置
  type-aliases-package: com.example.chatbot.entity   # 实体类包路径
  configuration:
    map-underscore-to-camel-case: true  # 开启驼峰命名转换
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  # SQL日志输出
  global-config:
    db-config:
      id-type: auto   # 主键生成策略
      logic-delete-field: deleted  # 逻辑删除字段
      logic-delete-value: 1        # 逻辑删除值
      logic-not-delete-value: 0    # 逻辑未删除值

# 聊天机器人模型配置
chatbot:
  model:
    options:
      qwen3:  # 通义千问模型配置
        model: qwen3:4b  # 模型名称和版本
        temperature: 0.5  # 温度参数，控制输出的随机性。范围[0,1]，默认0.7。值越大，输出越随机；值越小，输出越确定
        top-p: 0.9  # 核采样参数，控制输出词的概率分布。范围[0,1]，默认0.95。值越大，采样范围越大
        top-k: 5  # 控制每次生成时考虑的最高概率词的数量。范围[1,∞)，默认5。值越大，采样范围越大
        max_tokens: 2048  # 生成文本的最大长度。范围[1,∞)，默认2048
        presence_penalty: 0.0  # 存在惩罚，控制模型避免重复内容的程度。范围[-2,2]，默认0.0。正值增加多样性，负值增加重复性
        frequency_penalty: 0.0  # 频率惩罚，控制模型避免重复使用相同词的程度。范围[-2,2]，默认0.0。正值增加多样性，负值增加重复性
        stop: []  # 停止序列，当生成文本包含这些序列时停止生成。默认为空列表

      deepseekR1:  # DeepSeek模型配置
        model: deepseek-r1:7b
        temperature: 0.7
        top-p: 0.95
        top-k: 50
        max_tokens: 2048
        presence_penalty: 0.0
        frequency_penalty: 0.0
        stop: []

# 日志配置
logging:
  level:
    org.springframework: INFO
    org.springframework.ai.chat.client.advisor: DEBUG
    com.example.chatbot: DEBUG
    org.springframework.transaction : DEBUG

# CORS跨域配置
cors:
  allowed-origins: http://localhost:5173,http://localhost:3000  # 允许的源

# Spring Boot Actuator配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,beans  # 暴露的端点
  endpoint:
    health:
      show-details: always  # 显示详细的健康信息

# 关键词提取配置
keyword:
  extractor:
    min-word-length: 3        # 最小词长度
    min-keyword-count: 3      # 最小关键词数量
    default-keyword-count: 5  # 默认关键词数量
    stop-words: [的, 了, 和, 是, 在, 我, 有, 这, 个, 们, 中, 为, 以, 及, 与, 或]  # 停用词列表
    common-phrases: [人工智能, 安装指南, OfficePro 2023, 数据分析, 移动办公, Python, Photoshop, windows 11, MySQL, 高可用, 机器学习, 证件照, AutoCAD 2023, 微信小程序, 项目管理, Premiere, 市场营销, 容器化, Docker, wsl安装]  # 常用短语列表

# 线程池配置
thread-pool:
  # 通用异步任务线程池配置
  async:
    core-size: 5
    max-size: 10
    queue-capacity: 50
    thread-name-prefix: async-secure-
    keep-alive-seconds: 60
  # MVC异步请求线程池配置
  mvc:
    core-size: 5
    max-size: 10
    queue-capacity: 50
    thread-name-prefix: mvc-async-
    keep-alive-seconds: 60
    timeout-milliseconds: 30000

# Milvus配置（自动配置：只需配置host和port即可）
milvus:
  host: localhost
  port: 19530
  # Milvus搜索参数配置
  search:
    # nprobe参数：控制搜索时检查的聚类数量，值越大搜索范围越广，匹配更精准，但查询速度会稍慢
    # 建议值范围：16-128，默认值50
    nprobe: 50
    # 相似度阈值：控制返回结果的相似度阈值，范围0-1，值越大要求越严格
    # 建议值范围：0.7-0.95，默认值0.9
    score-threshold: 0.97
  # HNSW索引参数配置
  index:
    # M参数：控制每个节点连接的邻居数，值越大索引质量越高，但构建更慢
    # 建议值范围：4-64，默认值8
    m: 8
    # efConstruction参数：控制索引构建时的搜索范围，值越高，召回率越好，但构建更慢
    # 建议值范围：32-256，默认值64
    ef-construction: 64

# 文本向量化服务地址
embedding:
  # 向量嵌入服务的URL
  url: http://localhost:8888/embed
  # 向量维度，需要和嵌入模型生成的向量维度一致，否则 Milvus 无法正确存储和检索向量
  # 默认值为384，如果使用不同的嵌入模型，请相应调整此值
  vector-dim: 1024